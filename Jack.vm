function Jack.new 0
push constant 16
call Memory.alloc 1
pop pointer 0
push constant 40
pop this 0
push constant 169
pop this 1
push constant 20
pop this 2
push constant 20
pop this 3
push constant 0
pop this 10
push constant 0
pop this 11
push constant 0
pop this 12
push constant 0
pop this 13
push constant 0
pop this 14
push constant 0
not
pop this 4
push constant 0
not
pop this 5
push constant 0
pop this 6
push constant 10
pop this 7
push constant 0
not
pop this 8
push this 0
push this 1
push constant 20
sub
push constant 20
push constant 50
call CollisionBox.new 4
pop this 15
push pointer 0
call Jack.draw 1
pop temp 0
push pointer 0
return
function Jack.dispose 0
push argument 0
pop pointer 0
push this 15
call CollisionBox.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Jack.drawCommand 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 20
add
push this 1
push constant 20
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 10
add
push this 1
push constant 10
sub
push constant 10
call Screen.drawCircle 3
pop temp 0
push this 0
push constant 8
add
push this 1
push constant 20
add
push this 0
push constant 10
add
push this 10
add
push this 1
push constant 30
add
push this 11
add
call Screen.drawLine 4
pop temp 0
push this 0
push constant 12
add
push this 1
push constant 20
add
push this 0
push constant 10
add
push this 12
add
push this 1
push constant 30
add
push this 13
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Jack.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 9
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Jack.drawCommand 1
pop temp 0
goto IF_END0
label IF_FALSE0
push this 0
push constant 10
add
push this 1
push constant 20
add
push constant 10
call Screen.drawCircle 3
pop temp 0
label IF_END0
push constant 0
return
function Jack.jump 0
push argument 0
pop pointer 0
push constant 0
pop this 4
push constant 0
return
function Jack.jumpedUp 0
push argument 0
pop pointer 0
push this 4
return
function Jack.jumpedDown 0
push argument 0
pop pointer 0
push this 5
return
function Jack.jumpUp 0
push argument 0
pop pointer 0
push this 6
push constant 80
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push constant 2
sub
pop this 1
push this 15
push this 1
push constant 20
sub
call CollisionBox.setY 2
pop temp 0
push this 6
push constant 2
add
pop this 6
goto IF_END0
label IF_FALSE0
push constant 0
not
pop this 4
push constant 0
pop this 5
label IF_END0
push constant 0
return
function Jack.jumpDown 0
push argument 0
pop pointer 0
push this 6
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push constant 2
add
pop this 1
push this 15
push this 1
push constant 20
sub
call CollisionBox.setY 2
pop temp 0
push this 6
push constant 2
sub
pop this 6
goto IF_END0
label IF_FALSE0
push constant 0
not
pop this 5
label IF_END0
push constant 0
return
function Jack.crouch 0
push argument 0
pop pointer 0
push constant 0
pop this 8
push constant 0
not
pop this 9
push this 15
push this 1
push constant 10
add
call CollisionBox.setY 2
pop temp 0
push constant 0
return
function Jack.clearCrouch 0
push argument 0
pop pointer 0
push constant 0
pop this 9
push this 15
push this 1
push constant 20
sub
call CollisionBox.setY 2
pop temp 0
push constant 0
return
function Jack.moveLeft 0
push argument 0
pop pointer 0
push this 0
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 2
sub
pop this 0
label IF_FALSE0
push constant 0
return
function Jack.moveRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
push constant 510
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 2
add
pop this 0
push constant 0
return
label IF_FALSE0
push constant 0
not
return
function Jack.die 0
push argument 0
pop pointer 0
label WHILE_EXP0
push this 1
push constant 50
gt
not
if-goto WHILE_END0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Jack.drawCommand 1
pop temp 0
push this 1
push constant 2
sub
pop this 1
push this 0
push constant 1
add
pop this 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Jack.drawCommand 1
pop temp 0
push constant 4
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP1
push this 1
push constant 30
add
push constant 245
lt
not
if-goto WHILE_END1
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Jack.drawCommand 1
pop temp 0
push this 1
push constant 2
add
pop this 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Jack.drawCommand 1
pop temp 0
push constant 10
call Sys.wait 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Jack.reset 0
push argument 0
pop pointer 0
push constant 40
pop this 0
push constant 0
return
function Jack.getCB 0
push argument 0
pop pointer 0
push this 15
return
function Jack.walk 0
push argument 0
pop pointer 0
push this 14
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 10
push constant 10
neg
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 10
push constant 1
sub
pop this 10
push this 11
push constant 1
sub
pop this 11
push this 12
push constant 1
add
pop this 12
push this 13
pop this 13
goto IF_END1
label IF_FALSE1
push constant 0
not
pop this 14
label IF_END1
label IF_FALSE0
push this 14
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 10
push constant 10
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 10
push constant 1
add
pop this 10
push this 11
push constant 1
add
pop this 11
push this 12
push constant 1
sub
pop this 12
push this 13
pop this 13
goto IF_END3
label IF_FALSE3
push constant 0
pop this 14
label IF_END3
label IF_FALSE2
push constant 0
return
